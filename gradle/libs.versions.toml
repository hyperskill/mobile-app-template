[versions]
agp = "8.7.3"
kotlin = "2.0.0"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
ktor = "3.0.3"
compose = "1.5.4"
compose-material3 = "1.1.2"
androidxLifecycle = "2.8.5"
androidx-activityCompose = "1.8.0"
reduxKit = "1.3.1"
kermit = "2.0.4"
sentry-common = "0.10.0"
sentry-AndroidGradlePlugin = "4.11.0"
sentry-cocoapods = "8.38.0"
buildConfig = "5.5.1"

[libraries]
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidxLifecycle" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

#Redux
kit-presentation-redux = { module = "ru.nobird.app.presentation:presentation-redux", version.ref = "reduxKit" }
kit-presentation-reduxCoroutines = { module = "ru.nobird.app.presentation:presentation-redux-coroutines", version.ref = "reduxKit" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
sentry-common = { module = "io.sentry:sentry-kotlin-multiplatform", version.ref = "sentry-common" }

[bundles]
ktor-common = ['ktor-core', 'ktor-serialization', 'ktor-serialization-json', 'ktor-contentNegotiation', 'ktor-logging' ]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
sentry-androidGradle = { id = "io.sentry.android.gradle", version.ref = "sentry-AndroidGradlePlugin" }
sentry-kotlinCompilerGradle = { id = "io.sentry.kotlin.compiler.gradle", version.ref = "sentry-AndroidGradlePlugin" }

# Plugins defined by this project
example-multiplatform = { id = "org.hyperskill.example.kotlinMultiplatform", version = "unspecified" }